<?php
 // $Id$

 /**
  * @file
  *   A 'apollo' implementation of the 'solr' service type.
  */

/**
 * A class containing the 'apollo' implementation of the 'solr' service.
 *
 * This class is conditionally loaded when the "--solr_service_type=apollo"
 * option is passed to provision-save commands run on servers.
 *
 * The above flag is generated by the hosting counterpart of this class, which
 * provides the front end to configure all these fields.
 *
 * The responsibilities of this class include responding and saving any
 * values that are passed to it, and also to override the portions of
 * the public API for this service that are necessary.
 */
class provisionService_solr_apollo extends provisionService_solr {
 /**
  * Some common options handled upstream by the base service classes.
  */

 /**
  *   This service needs to have a port specified for it.
  */
  public $has_port = TRUE;

 /**
  *   The default value for the port input.
  */
  function default_port() {
    return 8983;
  }

 /**
  *   This service needs to be restarted with a shell command.
  */
  public $has_restart_cmd = TRUE;

 /**
  *   The default value for the restart command input.
  */
  function default_restart_cmd() {
    return "sudo /etc/init.apollo restart";
  }


  /**
   * Initialize this class, including option handling.
   */
  function init() {
    // REMEMBER TO CALL THE PARENT!
    parent::init();

    /**
     * Register configuration classes for the create_config / delete_config methods.
     */
    $this->configs['server'][] = 'provisionConfig_solr';
  }

  function init_server() {
    parent::init_server();

    $this->server->setProperty('apollo_search_server', 0);
  }


  function save_server() {
    /*
    if (provision_file()->exists('/usr/local/bin/apollo')->status()) {
      $path = "/usr/local/bin/apollo";
    }
    elseif (provision_file()->exists('/usr/bin/apollo')->status()) {
      $path = "/usr/bin/apollo";
    }
    else {
      return;
    }
    //*/

    $path = "/usr/bin/apollo";

    //$this->server->shell_exec($path . ' status');
    //$this->server->apollo_search_server = 1;
  }

  function verify_server_cmd() {
    provision_file()->copy(dirname(__FILE__) . '/schema.xml', $this->server->include_path . '/schema.xml');
    $this->sync($this->server->include_path . '/schema.xml');
    provision_file()->copy(dirname(__FILE__) . '/solrconfig.xml', $this->server->include_path . '/solrconfig.xml');
    $this->sync($this->server->include_path . '/solrconfig.xml');
    // Call the parent at the end. it will restart the server when it finishes.
    parent::verify_server_cmd();
  }


  /*
  function create_site_core($core_name) {
    $path = apollo_get_path();

    $this->server->shell_exec('sudo ' . $path . ' create' $core_name);
  }

  function remove_site_core($core_name) {
    $path = apollo_get_path();

    $this->server->shell_exec('sudo ' . $path . ' stop');
    $this->server->shell_exec('sudo ' . $path . ' remove ' $core_name);
    $this->server->shell_exec('sudo ' . $path . ' start');
  }
  //*/

}


/**
 * A apollo configuration file class.
 *
 * Just a file containing the value passed to us.
 */
class provisionConfig_solr extends provisionConfig {

}


